// Android Gradle Plugin out of the box only supports code coverage for instrumentation espresso) tests.
// This add support for unit tests as well.

def fileFilter = [
        '**/R.class',
        '**/R$*.class',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        'android/**/*.*',
        'com/android/**/*.class',

        //Room
        '**/AppDatabase.class',

        '**/api/*',
        '**/di/*.*',
        '**/models/*',
        '**/*Activity.*',
        '**/*Fragment.*',
        '**/*Adapter.*',
        '**/*ViewHolder*.*',
        '**/extension/*.*',
        '**/factory/*.*',
        '**/utils/*.*',
        '**/mappers/*.*',
        '**/TheMoviesApplication.class',
]

task coverageReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    def coverageSourceDirs = "$project.projectDir/src/main/kotlin"

    classDirectories = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)

    sourceDirectories = files(coverageSourceDirs)
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")

    reports {
        xml.enabled = true
        html.enabled = true
    }
}